/*
    
    Tablet and up
 
*/

@media (min-width: @screenTablet) {

    .container {
        max-width: @screenTablet - (@gutterWidth * 2);
        .center-block();
    }

    // Columns

    .columns (@index) when (@index > 0) {
        .col-@{index} {
            width: @columnWidth * @index;
        }
        .columns(@index - 1);
    }
    .columns (0) {}
    .columns (@columns);


    // Offset

    .offset (@index) when (@index > -1) {
        .col-offset-@{index} {
            margin-left: @columnWidth * @index;
        }
        .offset(@index - 1);
    }
    .offset (0) {}
    .offset (@columns);


    // Pull

    .pull (@index) when (@index > -1) {
        .col-pull-@{index} {
            right: @columnWidth * @index;
        }
        .pull(@index - 1);
    }
    .pull (0) {}
    .pull (@columns);


    // Push

    .push (@index) when (@index > -1) {
        .col-push-@{index} {
            left: @columnWidth * @index;
        }
        .push(@index - 1);
    }
    .push (0) {}
    .push (@columns);


    // Groups

    .col-group {
        margin-right: @gutterWidth / -2;
        margin-left: @gutterWidth / -2;
        .clearfix();
    }

}

/*
    
    Desktop and up
 
*/

@media (min-width: @screenDesktop) {

    .container {
        max-width: @screenDesktop  - (@gutterWidth * 2);
        .center-block();
    }

    // Columns

    .columns (@index) when (@index > 0) {
        .col-dt-@{index} {
            width: @columnWidth * @index;
        }
        .columns(@index - 1);
    }
    .columns (0) {}
    .columns (@columns);


    // Offset

    .offset (@index) when (@index > -1) {
        .col-dt-offset-@{index} {
            margin-left: @columnWidth * @index;
        }
        .offset(@index - 1);
    }
    .offset (0) {}
    .offset (@columns);


    // Pull

    .pull (@index) when (@index > -1) {
        .col-dt-pull-@{index} {
            right: @columnWidth * @index;
        }
        .pull(@index - 1);
    }
    .pull (0) {}
    .pull (@columns);


    // Push

    .push (@index) when (@index > -1) {
        .col-dt-push-@{index} {
            left: @columnWidth * @index;
        }
        .push(@index - 1);
    }
    .push (0) {}
    .push (@columns);

}